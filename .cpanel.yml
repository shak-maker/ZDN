---
# cPanel Git Version Control Deployment Configuration
# This file configures automatic deployment for cPanel hosting

deployment:
  tasks:
    # Set deployment path for report.zdn.mn subdomain
    - export DEPLOYPATH=/home/zdnmnkw5/report.zdn.mn/
    
    # Build frontend application
    - cd frontend && npm ci && npm run build
    - cd ..
    
    # Build backend application  
    - cd backend && npm ci && npm run build
    - cd ..
    
    # Create necessary directories
    - mkdir -p $DEPLOYPATH/api
    - mkdir -p $DEPLOYPATH/scripts
    - mkdir -p $DEPLOYPATH/backups
    
    # Deploy frontend files
    - /bin/cp -R frontend/dist/* $DEPLOYPATH/
    
    # Deploy backend files
    - /bin/cp -R backend/dist/* $DEPLOYPATH/api/
    - /bin/cp backend/package.json $DEPLOYPATH/api/
    - /bin/cp backend/ecosystem.config.js $DEPLOYPATH/api/
    - /bin/cp backend/env.production $DEPLOYPATH/api/.env
    
    # Deploy database files
    - /bin/cp -R backend/prisma $DEPLOYPATH/api/
    
    # Deploy scripts
    - /bin/cp scripts/cpanel-backup.sh $DEPLOYPATH/scripts/
    - /bin/cp scripts/cpanel-deploy.sh $DEPLOYPATH/scripts/
    - chmod +x $DEPLOYPATH/scripts/*.sh
    
    # Deploy documentation
    - /bin/cp README.md $DEPLOYPATH/
    - /bin/cp PRODUCTION_README.md $DEPLOYPATH/
    - /bin/cp CPANEL_DEPLOYMENT.md $DEPLOYPATH/
    - /bin/cp CPANEL_DEPLOYMENT_GUIDE.md $DEPLOYPATH/
    
    # Create .htaccess for frontend routing
    - cat > $DEPLOYPATH/.htaccess << 'EOF'
    # Frontend routing
    RewriteEngine On
    RewriteBase /
    
    # Handle React routing
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^(.*)$ /index.html [QSA,L]
    
    # Security headers
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Cache static assets
    <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg)$">
        ExpiresActive On
        ExpiresDefault "access plus 1 month"
    </FilesMatch>
    EOF
    
    # Create .htaccess for API routing
    - cat > $DEPLOYPATH/api/.htaccess << 'EOF'
    # API routing
    RewriteEngine On
    RewriteBase /api/
    
    # Handle API routes
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^(.*)$ /api/main.js [QSA,L]
    
    # CORS headers
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-API-Key"
    
    # Handle preflight requests
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]
    EOF
    
    # Set proper file permissions
    - find $DEPLOYPATH -type f -exec chmod 644 {} \;
    - find $DEPLOYPATH -type d -exec chmod 755 {} \;
    - chmod 755 $DEPLOYPATH/scripts/*.sh
    
    # Install backend dependencies
    - cd $DEPLOYPATH/api && npm install --production
    
    # Run database migrations
    - cd $DEPLOYPATH/api && npx prisma migrate deploy
    - cd $DEPLOYPATH/api && npx prisma generate
    
    # Create deployment info file
    - cat > $DEPLOYPATH/DEPLOYMENT_INFO.txt << EOF
    Deployment Information
    =====================
    Timestamp: $(date)
    Git Commit: $(git rev-parse HEAD)
    Git Branch: $(git branch --show-current)
    
    Files Deployed:
    - Frontend: React application
    - Backend: NestJS API
    - Database: Prisma schema and migrations
    - Scripts: Backup and maintenance scripts
    - Documentation: User and deployment guides
    
    Next Steps:
    1. Verify database connection in .env file
    2. Test the application
    3. Configure SSL if needed
    EOF
    
    # Log deployment completion
    - echo "Deployment completed successfully at $(date)" >> $DEPLOYPATH/deployment.log
